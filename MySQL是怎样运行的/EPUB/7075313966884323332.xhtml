<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" epub:prefix="z3998: http://www.daisy.org/z3998/2012/vocab/structure/#" lang="en" xml:lang="en">
  <head>
    <title>专题式讲解 —— MySQL冷知识：t1.id=t2.id=t3.id看着咋这么怪呢？</title>
  </head>
  <body><div class="markdown-body">
    <h1>专题式讲解 —— MySQL冷知识：t1.id=t2.id=t3.id看着咋这么怪呢？</h1>

    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <link rel="stylesheet" href="style/style.css" type="text/css"/>

<div class="markdown-body">
    <h1>
 MySQL冷知识：t1.id=t2.id=t3.id看着咋这么怪呢？
</h1>
<p>
 标签： MySQL是怎样运行的
</p>
<hr/>
<p>
 为了故事的顺利发展，我们先创建几个表：
</p>
<pre><code>CREATE TABLE t1 (id INT);
CREATE TABLE t2 (id INT);
CREATE TABLE t3 (id INT);
</code></pre>
<p>
 然后往这些表里插入一些数据（具体的插入语句就不写了），达到的效果就是这样：
</p>
<pre><code>mysql&gt; SELECT * FROM t1;
+----+
| id |
+----+
|  1 |
|  2 |
|  3 |
+----+
3 rows in set (0.00 sec)

mysql&gt; SELECT * FROM t2;
+----+
| id |
+----+
|  1 |
|  2 |
|  3 |
+----+
3 rows in set (0.00 sec)

mysql&gt; SELECT * FROM t3;
+----+
| id |
+----+
|  1 |
|  2 |
|  3 |
+----+
3 rows in set (0.00 sec)
</code></pre>
<p>
 如果我们想对这三个表执行连接操作，把三个表中
 <code>
  id
 </code>
 列相同的记录都拿出来，有的同学可能会这样写：
</p>
<pre><code>SELECT t1.id AS t1_id, t2.id AS t2_id, t3.id AS t3_id 
    FROM t1, t2, t3 
    WHERE t1.id = t2.id = t3.id;
</code></pre>
<p>
 这样写会得到啥效果呢？我们看一下：
</p>
<pre><code>mysql&gt; SELECT t1.id AS t1_id, t2.id AS t2_id, t3.id AS t3_id
    -&gt;     FROM t1, t2, t3
    -&gt;     WHERE t1.id = t2.id = t3.id;
+-------+-------+-------+
| t1_id | t2_id | t3_id |
+-------+-------+-------+
|     1 |     1 |     1 |
|     2 |     2 |     1 |
|     3 |     3 |     1 |
+-------+-------+-------+
3 rows in set (0.00 sec)

mysql&gt;
</code></pre>
<p>
 噫，发生了奇怪的事情，结果集中的第一条记录是符合我们预期的，但是剩下两条记录不符合我们预期，其中
 <code>
  t3.id
 </code>
 的值和
 <code>
  t1.id
 </code>
 、
 <code>
  t2.id
 </code>
 是不一样的，这是什么鬼呢？
</p>
<p>
 哈哈，其实条件
 <code>
  t1.id = t2.id = t3.id
 </code>
 的真实含义是这样的：
</p>
<pre><code>(t1.id = t2.id) = t3.id
</code></pre>
<p>
 也就是说我们需要分两步理解这个表达式：
</p>
<ul>
 <li>
  <p>
   先运算
   <code>
    t1.id = t2.id
   </code>
   ，它其实是一个布尔表达式，得到的结果是0或者1。
  </p>
 </li>
 <li>
  <p>
   上一步骤得到的结果（也就是0或者1）再和
   <code>
    t3.id
   </code>
   做比较。
  </p>
 </li>
</ul>
<p>
 让我们再分析一下上边的例子：
</p>
<ul>
 <li>
  <p>
   对于结果集的第一条记录来说，
   <code>
    t1.id
   </code>
   的值为1、
   <code>
    t2.id
   </code>
   的值为1、
   <code>
    t3.id
   </code>
   的值为1。
  </p>
  <ul>
   <li>
    <p>
     先比较
     <code>
      t1.id = t2.id
     </code>
     是否成立，很显然
     <code>
      1 = 1
     </code>
     的结果是TRUE，MySQL中用1表示这个布尔表达式的结果。
    </p>
   </li>
   <li>
    <p>
     然后通过布尔表达式的结果
     <code>
      1
     </code>
     再和
     <code>
      t3.id
     </code>
     比较，很显然
     <code>
      1 = 1
     </code>
     成立。
    </p>
   </li>
  </ul>
 </li>
 <li>
  <p>
   对于结果集的第二条记录来说，
   <code>
    t1.id
   </code>
   的值为2、
   <code>
    t2.id
   </code>
   的值为2、
   <code>
    t3.id
   </code>
   的值为1。
  </p>
  <ul>
   <li>
    <p>
     先比较
     <code>
      t1.id = t2.id
     </code>
     是否成立，很显然
     <code>
      2 = 2
     </code>
     的结果是TRUE，MySQL中用1表示这个布尔表达式的结果。
    </p>
   </li>
   <li>
    <p>
     然后通过布尔表达式的结果
     <code>
      1
     </code>
     再和
     <code>
      t3.id
     </code>
     比较，很显然
     <code>
      1 = 1
     </code>
     成立。
    </p>
   </li>
  </ul>
 </li>
 <li>
  <p>
   对于结果集的第三条记录来说，
   <code>
    t1.id
   </code>
   的值为3、
   <code>
    t2.id
   </code>
   的值为3、
   <code>
    t3.id
   </code>
   的值为1。
  </p>
  <ul>
   <li>
    <p>
     先比较
     <code>
      t1.id = t2.id
     </code>
     是否成立，很显然
     <code>
      3 = 3
     </code>
     的结果是TRUE，MySQL中用1表示这个布尔表达式的结果。
    </p>
   </li>
   <li>
    <p>
     然后通过布尔表达式的结果
     <code>
      1
     </code>
     再和
     <code>
      t3.id
     </code>
     比较，很显然
     <code>
      1 = 1
     </code>
     成立。
    </p>
   </li>
  </ul>
 </li>
</ul>
<p>
 噫，原来
 <code>
  t1.id = t2.id = t3.id
 </code>
 是这个意思呀，那我们想要实现把三个表中
 <code>
  id
 </code>
 列值相同的记录取出来的效果该咋写？这么写：
</p>
<pre><code>SELECT t1.id AS t1_id, t2.id AS t2_id, t3.id AS t3_id 
    FROM t1, t2, t3 
    WHERE t1.id = t2.id AND t1.id = t3.id;
</code></pre>
<p>
 我们看下效果：
</p>
<pre><code>mysql&gt; SELECT t1.id AS t1_id, t2.id AS t2_id, t3.id AS t3_id
    -&gt;     FROM t1, t2, t3
    -&gt;     WHERE t1.id = t2.id AND t1.id = t3.id;
+-------+-------+-------+
| t1_id | t2_id | t3_id |
+-------+-------+-------+
|     1 |     1 |     1 |
|     2 |     2 |     2 |
|     3 |     3 |     3 |
+-------+-------+-------+
3 rows in set (0.00 sec)
</code></pre>
<p>
 这样的话，
 <code>
  MySQL
 </code>
 才会把三个表中
 <code>
  id
 </code>
 列值相同的记录取出来呢～ 一定要记住这个知识点喔，小心哪天写三表连接的时候写错了还找不到原因呢～
</p>
<blockquote>
 <p>
  小贴士：
  <br/>
  <br/>
  本文的这个问题是有《MySQL是怎样运行的：从根儿上理解MySQL》的微信讨论群里昵称为“白衬衫老胡同”的同学提问的，说实话我也把这个知识点忘掉了，在此感谢他的问题～
 </p>
</blockquote>
</div>

</div>
</body>
</html>
